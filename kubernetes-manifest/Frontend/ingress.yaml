apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: ingress
  annotations:
    # Ingress Core Settings
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # Health Check Settings
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    alb.ingress.kubernetes.io/success-codes: "200-499"
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/subnets: subnet-0183a79277eadd98c, subnet-0829134eafc958488  # Ensure these are correct
    # SSL Certificate Settings
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'  # Fixed indentation and JSON format
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:257128486619:certificate/7163f5d1-ccdc-43bc-a6e4-4bf1cb3a47dd  # Uncomment and update if using HTTPS
    # alb.ingress.kubernetes.io/ssl-redirect: "443"
    # Load Balancer Name
    alb.ingress.kubernetes.io/load-balancer-name: my-alb
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: api
                port:
                  number: 3500
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 8080
